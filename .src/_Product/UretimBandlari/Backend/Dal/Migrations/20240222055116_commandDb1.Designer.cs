// <auto-generated />
using Dal.Concrete.Contexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dal.Migrations
{
    [DbContext(typeof(PDbContextCommand))]
    [Migration("20240222055116_commandDb1")]
    partial class commandDb1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.DbModels.UserModels.Adres", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("AdresAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Adres");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.Kitap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("KitapAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Kitap");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.Ogrenci", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SinifId")
                        .HasColumnType("int");

                    b.Property<string>("Soyadi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SinifId");

                    b.ToTable("Ogrenci");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.OgrenciKitap", b =>
                {
                    b.Property<int>("OgrenciId")
                        .HasColumnType("int");

                    b.Property<int>("KitapId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("OgrenciId", "KitapId", "Id");

                    b.HasIndex("KitapId");

                    b.ToTable("OgrenciKitap");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.OperationClaims", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OperationClaims");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.OperationClaimsSystemUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OperationClaimsId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("SystemUserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OperationClaimsId");

                    b.HasIndex("SystemUserId");

                    b.ToTable("OperationClaimsSystemUser");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.Sinif", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("SinifAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sinif");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.SystemUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nick")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SystemUser");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.Yazar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("YazarAdi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Yazar");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.YazarKitap", b =>
                {
                    b.Property<int>("YazarId")
                        .HasColumnType("int");

                    b.Property<int>("KitapId")
                        .HasColumnType("int");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("YazarId", "KitapId", "Id");

                    b.HasIndex("KitapId");

                    b.ToTable("YazarKitap");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.Adres", b =>
                {
                    b.HasOne("Entities.DbModels.UserModels.Ogrenci", "Ogrenci")
                        .WithOne("Adres")
                        .HasForeignKey("Entities.DbModels.UserModels.Adres", "Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.Ogrenci", b =>
                {
                    b.HasOne("Entities.DbModels.UserModels.Sinif", "Sinif")
                        .WithMany("Ogrencis")
                        .HasForeignKey("SinifId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Sinif");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.OgrenciKitap", b =>
                {
                    b.HasOne("Entities.DbModels.UserModels.Kitap", "Kitap")
                        .WithMany("Ogrencis")
                        .HasForeignKey("KitapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.DbModels.UserModels.Ogrenci", "Ogrenci")
                        .WithMany("Kitaps")
                        .HasForeignKey("OgrenciId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kitap");

                    b.Navigation("Ogrenci");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.OperationClaimsSystemUser", b =>
                {
                    b.HasOne("Entities.DbModels.UserModels.OperationClaims", "OperationClaims")
                        .WithMany("SystemUsers")
                        .HasForeignKey("OperationClaimsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.DbModels.UserModels.SystemUser", "SystemUser")
                        .WithMany("OperationClaims")
                        .HasForeignKey("SystemUserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OperationClaims");

                    b.Navigation("SystemUser");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.YazarKitap", b =>
                {
                    b.HasOne("Entities.DbModels.UserModels.Kitap", "Kitap")
                        .WithMany("Yazars")
                        .HasForeignKey("KitapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.DbModels.UserModels.Yazar", "Yazar")
                        .WithMany("Kitaps")
                        .HasForeignKey("YazarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Kitap");

                    b.Navigation("Yazar");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.Kitap", b =>
                {
                    b.Navigation("Ogrencis");

                    b.Navigation("Yazars");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.Ogrenci", b =>
                {
                    b.Navigation("Adres")
                        .IsRequired();

                    b.Navigation("Kitaps");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.OperationClaims", b =>
                {
                    b.Navigation("SystemUsers");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.Sinif", b =>
                {
                    b.Navigation("Ogrencis");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.SystemUser", b =>
                {
                    b.Navigation("OperationClaims");
                });

            modelBuilder.Entity("Entities.DbModels.UserModels.Yazar", b =>
                {
                    b.Navigation("Kitaps");
                });
#pragma warning restore 612, 618
        }
    }
}
